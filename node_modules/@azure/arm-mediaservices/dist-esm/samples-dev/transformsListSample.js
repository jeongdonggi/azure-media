/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */
import { __asyncValues, __awaiter } from "tslib";
// Copyright (c) Microsoft Corporation.
// Licensed under the MIT License.
import { AzureMediaServices } from "@azure/arm-mediaservices";
import { DefaultAzureCredential } from "@azure/identity";
/**
 * This sample demonstrates how to Lists the Transforms in the account.
 *
 * @summary Lists the Transforms in the account.
 * x-ms-original-file: specification/mediaservices/resource-manager/Microsoft.Media/stable/2021-11-01/examples/transforms-list-all.json
 */
function listsTheTransforms() {
    var e_1, _a;
    return __awaiter(this, void 0, void 0, function* () {
        const subscriptionId = "00000000-0000-0000-0000-000000000000";
        const resourceGroupName = "contosoresources";
        const accountName = "contosomedia";
        const credential = new DefaultAzureCredential();
        const client = new AzureMediaServices(credential, subscriptionId);
        const resArray = new Array();
        try {
            for (var _b = __asyncValues(client.transforms.list(resourceGroupName, accountName)), _c; _c = yield _b.next(), !_c.done;) {
                let item = _c.value;
                resArray.push(item);
            }
        }
        catch (e_1_1) { e_1 = { error: e_1_1 }; }
        finally {
            try {
                if (_c && !_c.done && (_a = _b.return)) yield _a.call(_b);
            }
            finally { if (e_1) throw e_1.error; }
        }
        console.log(resArray);
    });
}
listsTheTransforms().catch(console.error);
/**
 * This sample demonstrates how to Lists the Transforms in the account.
 *
 * @summary Lists the Transforms in the account.
 * x-ms-original-file: specification/mediaservices/resource-manager/Microsoft.Media/stable/2021-11-01/examples/transforms-list-all-filter-by-created.json
 */
function listsTheTransformsFilterByCreated() {
    var e_2, _a;
    return __awaiter(this, void 0, void 0, function* () {
        const subscriptionId = "00000000-0000-0000-0000-000000000000";
        const resourceGroupName = "contosoresources";
        const accountName = "contosomedia";
        const filter = "properties/created gt 2021-11-01T00:00:00.0000000Z and properties/created le 2021-11-01T00:00:10.0000000Z";
        const orderby = "properties/created";
        const options = { filter, orderby };
        const credential = new DefaultAzureCredential();
        const client = new AzureMediaServices(credential, subscriptionId);
        const resArray = new Array();
        try {
            for (var _b = __asyncValues(client.transforms.list(resourceGroupName, accountName, options)), _c; _c = yield _b.next(), !_c.done;) {
                let item = _c.value;
                resArray.push(item);
            }
        }
        catch (e_2_1) { e_2 = { error: e_2_1 }; }
        finally {
            try {
                if (_c && !_c.done && (_a = _b.return)) yield _a.call(_b);
            }
            finally { if (e_2) throw e_2.error; }
        }
        console.log(resArray);
    });
}
listsTheTransformsFilterByCreated().catch(console.error);
/**
 * This sample demonstrates how to Lists the Transforms in the account.
 *
 * @summary Lists the Transforms in the account.
 * x-ms-original-file: specification/mediaservices/resource-manager/Microsoft.Media/stable/2021-11-01/examples/transforms-list-all-filter-by-lastmodified.json
 */
function listsTheTransformsFilterByLastmodified() {
    var e_3, _a;
    return __awaiter(this, void 0, void 0, function* () {
        const subscriptionId = "00000000-0000-0000-0000-000000000000";
        const resourceGroupName = "contosoresources";
        const accountName = "contosomedia";
        const filter = "properties/lastmodified gt 2021-11-01T00:00:00.0000000Z and properties/lastmodified le 2021-11-01T00:00:10.0000000Z";
        const orderby = "properties/lastmodified desc";
        const options = { filter, orderby };
        const credential = new DefaultAzureCredential();
        const client = new AzureMediaServices(credential, subscriptionId);
        const resArray = new Array();
        try {
            for (var _b = __asyncValues(client.transforms.list(resourceGroupName, accountName, options)), _c; _c = yield _b.next(), !_c.done;) {
                let item = _c.value;
                resArray.push(item);
            }
        }
        catch (e_3_1) { e_3 = { error: e_3_1 }; }
        finally {
            try {
                if (_c && !_c.done && (_a = _b.return)) yield _a.call(_b);
            }
            finally { if (e_3) throw e_3.error; }
        }
        console.log(resArray);
    });
}
listsTheTransformsFilterByLastmodified().catch(console.error);
/**
 * This sample demonstrates how to Lists the Transforms in the account.
 *
 * @summary Lists the Transforms in the account.
 * x-ms-original-file: specification/mediaservices/resource-manager/Microsoft.Media/stable/2021-11-01/examples/transforms-list-all-filter-by-name.json
 */
function listsTheTransformsFilterByName() {
    var e_4, _a;
    return __awaiter(this, void 0, void 0, function* () {
        const subscriptionId = "00000000-0000-0000-0000-000000000000";
        const resourceGroupName = "contosoresources";
        const accountName = "contosomedia";
        const filter = "(name eq 'sampleEncode') or (name eq 'sampleEncodeAndVideoIndex')";
        const orderby = "name desc";
        const options = { filter, orderby };
        const credential = new DefaultAzureCredential();
        const client = new AzureMediaServices(credential, subscriptionId);
        const resArray = new Array();
        try {
            for (var _b = __asyncValues(client.transforms.list(resourceGroupName, accountName, options)), _c; _c = yield _b.next(), !_c.done;) {
                let item = _c.value;
                resArray.push(item);
            }
        }
        catch (e_4_1) { e_4 = { error: e_4_1 }; }
        finally {
            try {
                if (_c && !_c.done && (_a = _b.return)) yield _a.call(_b);
            }
            finally { if (e_4) throw e_4.error; }
        }
        console.log(resArray);
    });
}
listsTheTransformsFilterByName().catch(console.error);
//# sourceMappingURL=transformsListSample.js.map