/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */
import { __awaiter } from "tslib";
// Copyright (c) Microsoft Corporation.
// Licensed under the MIT License.
import { AzureMediaServices } from "@azure/arm-mediaservices";
import { DefaultAzureCredential } from "@azure/identity";
/**
 * This sample demonstrates how to Create a Streaming Locator in the Media Services account
 *
 * @summary Create a Streaming Locator in the Media Services account
 * x-ms-original-file: specification/mediaservices/resource-manager/Microsoft.Media/stable/2022-08-01/examples/streaming-locators-create-clear.json
 */
function createsAStreamingLocatorWithClearStreaming() {
    return __awaiter(this, void 0, void 0, function* () {
        const subscriptionId = "00000000-0000-0000-0000-000000000000";
        const resourceGroupName = "contoso";
        const accountName = "contosomedia";
        const streamingLocatorName = "UserCreatedClearStreamingLocator";
        const parameters = {
            assetName: "ClimbingMountRainier",
            streamingPolicyName: "clearStreamingPolicy"
        };
        const credential = new DefaultAzureCredential();
        const client = new AzureMediaServices(credential, subscriptionId);
        const result = yield client.streamingLocators.create(resourceGroupName, accountName, streamingLocatorName, parameters);
        console.log(result);
    });
}
createsAStreamingLocatorWithClearStreaming().catch(console.error);
/**
 * This sample demonstrates how to Create a Streaming Locator in the Media Services account
 *
 * @summary Create a Streaming Locator in the Media Services account
 * x-ms-original-file: specification/mediaservices/resource-manager/Microsoft.Media/stable/2022-08-01/examples/streaming-locators-create-secure.json
 */
function createsAStreamingLocatorWithSecureStreaming() {
    return __awaiter(this, void 0, void 0, function* () {
        const subscriptionId = "00000000-0000-0000-0000-000000000000";
        const resourceGroupName = "contoso";
        const accountName = "contosomedia";
        const streamingLocatorName = "UserCreatedSecureStreamingLocator";
        const parameters = {
            assetName: "ClimbingMountRainier",
            endTime: new Date("2028-12-31T23:59:59.9999999Z"),
            startTime: new Date("2018-03-01T00:00:00Z"),
            streamingPolicyName: "secureStreamingPolicy"
        };
        const credential = new DefaultAzureCredential();
        const client = new AzureMediaServices(credential, subscriptionId);
        const result = yield client.streamingLocators.create(resourceGroupName, accountName, streamingLocatorName, parameters);
        console.log(result);
    });
}
createsAStreamingLocatorWithSecureStreaming().catch(console.error);
/**
 * This sample demonstrates how to Create a Streaming Locator in the Media Services account
 *
 * @summary Create a Streaming Locator in the Media Services account
 * x-ms-original-file: specification/mediaservices/resource-manager/Microsoft.Media/stable/2022-08-01/examples/streaming-locators-create-secure-userDefinedContentKeys.json
 */
function createsAStreamingLocatorWithUserDefinedContentKeys() {
    return __awaiter(this, void 0, void 0, function* () {
        const subscriptionId = "00000000-0000-0000-0000-000000000000";
        const resourceGroupName = "contoso";
        const accountName = "contosomedia";
        const streamingLocatorName = "UserCreatedSecureStreamingLocatorWithUserDefinedContentKeys";
        const parameters = {
            assetName: "ClimbingMountRainier",
            contentKeys: [
                {
                    id: "60000000-0000-0000-0000-000000000001",
                    labelReferenceInStreamingPolicy: "aesDefaultKey",
                    value: "1UqLohAfWsEGkULYxHjYZg=="
                },
                {
                    id: "60000000-0000-0000-0000-000000000004",
                    labelReferenceInStreamingPolicy: "cencDefaultKey",
                    value: "4UqLohAfWsEGkULYxHjYZg=="
                },
                {
                    id: "60000000-0000-0000-0000-000000000007",
                    labelReferenceInStreamingPolicy: "cbcsDefaultKey",
                    value: "7UqLohAfWsEGkULYxHjYZg=="
                }
            ],
            streamingLocatorId: "90000000-0000-0000-0000-00000000000A",
            streamingPolicyName: "secureStreamingPolicy"
        };
        const credential = new DefaultAzureCredential();
        const client = new AzureMediaServices(credential, subscriptionId);
        const result = yield client.streamingLocators.create(resourceGroupName, accountName, streamingLocatorName, parameters);
        console.log(result);
    });
}
createsAStreamingLocatorWithUserDefinedContentKeys().catch(console.error);
//# sourceMappingURL=streamingLocatorsCreateSample.js.map