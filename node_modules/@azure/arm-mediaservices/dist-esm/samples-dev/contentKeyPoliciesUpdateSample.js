/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */
import { __awaiter } from "tslib";
// Copyright (c) Microsoft Corporation.
// Licensed under the MIT License.
import { AzureMediaServices } from "@azure/arm-mediaservices";
import { DefaultAzureCredential } from "@azure/identity";
/**
 * This sample demonstrates how to Updates an existing Content Key Policy in the Media Services account
 *
 * @summary Updates an existing Content Key Policy in the Media Services account
 * x-ms-original-file: specification/mediaservices/resource-manager/Microsoft.Media/stable/2022-08-01/examples/content-key-policies-update.json
 */
function updateAContentKeyPolicy() {
    return __awaiter(this, void 0, void 0, function* () {
        const subscriptionId = "00000000-0000-0000-0000-000000000000";
        const resourceGroupName = "contoso";
        const accountName = "contosomedia";
        const contentKeyPolicyName = "PolicyWithClearKeyOptionAndTokenRestriction";
        const parameters = {
            description: "Updated Policy",
            options: [
                {
                    name: "ClearKeyOption",
                    configuration: {
                        odataType: "#Microsoft.Media.ContentKeyPolicyClearKeyConfiguration"
                    },
                    restriction: {
                        odataType: "#Microsoft.Media.ContentKeyPolicyOpenRestriction"
                    }
                }
            ]
        };
        const credential = new DefaultAzureCredential();
        const client = new AzureMediaServices(credential, subscriptionId);
        const result = yield client.contentKeyPolicies.update(resourceGroupName, accountName, contentKeyPolicyName, parameters);
        console.log(result);
    });
}
updateAContentKeyPolicy().catch(console.error);
//# sourceMappingURL=contentKeyPoliciesUpdateSample.js.map