import * as coreClient from "@azure/core-client";
import * as coreAuth from "@azure/core-auth";
import { AccountFilters, Operations, Mediaservices, PrivateLinkResources, PrivateEndpointConnections, Locations, MediaServicesOperationStatuses, MediaServicesOperationResults, Assets, AssetFilters, Tracks, OperationStatuses, OperationResults, ContentKeyPolicies, Transforms, Jobs, StreamingPolicies, StreamingLocators, LiveEvents, LiveOutputs, StreamingEndpoints } from "./operationsInterfaces";
import { AzureMediaServicesOptionalParams } from "./models";
export declare class AzureMediaServices extends coreClient.ServiceClient {
    $host: string;
    subscriptionId: string;
    /**
     * Initializes a new instance of the AzureMediaServices class.
     * @param credentials Subscription credentials which uniquely identify client subscription.
     * @param subscriptionId The unique identifier for a Microsoft Azure subscription.
     * @param options The parameter options
     */
    constructor(credentials: coreAuth.TokenCredential, subscriptionId: string, options?: AzureMediaServicesOptionalParams);
    accountFilters: AccountFilters;
    operations: Operations;
    mediaservices: Mediaservices;
    privateLinkResources: PrivateLinkResources;
    privateEndpointConnections: PrivateEndpointConnections;
    locations: Locations;
    mediaServicesOperationStatuses: MediaServicesOperationStatuses;
    mediaServicesOperationResults: MediaServicesOperationResults;
    assets: Assets;
    assetFilters: AssetFilters;
    tracks: Tracks;
    operationStatuses: OperationStatuses;
    operationResults: OperationResults;
    contentKeyPolicies: ContentKeyPolicies;
    transforms: Transforms;
    jobs: Jobs;
    streamingPolicies: StreamingPolicies;
    streamingLocators: StreamingLocators;
    liveEvents: LiveEvents;
    liveOutputs: LiveOutputs;
    streamingEndpoints: StreamingEndpoints;
}
//# sourceMappingURL=azureMediaServices.d.ts.map