/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */
import { AccountFilter as AccountFilterMapper, MediaService as MediaServiceMapper, MediaServiceUpdate as MediaServiceUpdateMapper, SyncStorageKeysInput as SyncStorageKeysInputMapper, ListEdgePoliciesInput as ListEdgePoliciesInputMapper, PrivateEndpointConnection as PrivateEndpointConnectionMapper, CheckNameAvailabilityInput as CheckNameAvailabilityInputMapper, Asset as AssetMapper, ListContainerSasInput as ListContainerSasInputMapper, AssetFilter as AssetFilterMapper, AssetTrack as AssetTrackMapper, ContentKeyPolicy as ContentKeyPolicyMapper, Transform as TransformMapper, Job as JobMapper, StreamingPolicy as StreamingPolicyMapper, StreamingLocator as StreamingLocatorMapper, LiveEvent as LiveEventMapper, LiveEventActionInput as LiveEventActionInputMapper, LiveOutput as LiveOutputMapper, StreamingEndpoint as StreamingEndpointMapper, StreamingEntityScaleUnit as StreamingEntityScaleUnitMapper } from "../models/mappers";
export const accept = {
    parameterPath: "accept",
    mapper: {
        defaultValue: "application/json",
        isConstant: true,
        serializedName: "Accept",
        type: {
            name: "String"
        }
    }
};
export const $host = {
    parameterPath: "$host",
    mapper: {
        serializedName: "$host",
        required: true,
        type: {
            name: "String"
        }
    },
    skipEncoding: true
};
export const subscriptionId = {
    parameterPath: "subscriptionId",
    mapper: {
        serializedName: "subscriptionId",
        required: true,
        type: {
            name: "String"
        }
    }
};
export const resourceGroupName = {
    parameterPath: "resourceGroupName",
    mapper: {
        serializedName: "resourceGroupName",
        required: true,
        type: {
            name: "String"
        }
    }
};
export const accountName = {
    parameterPath: "accountName",
    mapper: {
        serializedName: "accountName",
        required: true,
        type: {
            name: "String"
        }
    }
};
export const apiVersion = {
    parameterPath: "apiVersion",
    mapper: {
        defaultValue: "2022-08-01",
        isConstant: true,
        serializedName: "api-version",
        type: {
            name: "String"
        }
    }
};
export const filterName = {
    parameterPath: "filterName",
    mapper: {
        serializedName: "filterName",
        required: true,
        type: {
            name: "String"
        }
    }
};
export const contentType = {
    parameterPath: ["options", "contentType"],
    mapper: {
        defaultValue: "application/json",
        isConstant: true,
        serializedName: "Content-Type",
        type: {
            name: "String"
        }
    }
};
export const parameters = {
    parameterPath: "parameters",
    mapper: AccountFilterMapper
};
export const nextLink = {
    parameterPath: "nextLink",
    mapper: {
        serializedName: "nextLink",
        required: true,
        type: {
            name: "String"
        }
    },
    skipEncoding: true
};
export const apiVersion1 = {
    parameterPath: "apiVersion",
    mapper: {
        defaultValue: "2021-11-01",
        isConstant: true,
        serializedName: "api-version",
        type: {
            name: "String"
        }
    }
};
export const parameters1 = {
    parameterPath: "parameters",
    mapper: MediaServiceMapper
};
export const parameters2 = {
    parameterPath: "parameters",
    mapper: MediaServiceUpdateMapper
};
export const parameters3 = {
    parameterPath: "parameters",
    mapper: SyncStorageKeysInputMapper
};
export const parameters4 = {
    parameterPath: "parameters",
    mapper: ListEdgePoliciesInputMapper
};
export const name = {
    parameterPath: "name",
    mapper: {
        serializedName: "name",
        required: true,
        type: {
            name: "String"
        }
    }
};
export const parameters5 = {
    parameterPath: "parameters",
    mapper: PrivateEndpointConnectionMapper
};
export const parameters6 = {
    parameterPath: "parameters",
    mapper: CheckNameAvailabilityInputMapper
};
export const locationName = {
    parameterPath: "locationName",
    mapper: {
        serializedName: "locationName",
        required: true,
        type: {
            name: "String"
        }
    }
};
export const operationId = {
    parameterPath: "operationId",
    mapper: {
        serializedName: "operationId",
        required: true,
        type: {
            name: "String"
        }
    }
};
export const filter = {
    parameterPath: ["options", "filter"],
    mapper: {
        serializedName: "$filter",
        type: {
            name: "String"
        }
    }
};
export const top = {
    parameterPath: ["options", "top"],
    mapper: {
        serializedName: "$top",
        type: {
            name: "Number"
        }
    }
};
export const orderby = {
    parameterPath: ["options", "orderby"],
    mapper: {
        serializedName: "$orderby",
        type: {
            name: "String"
        }
    }
};
export const assetName = {
    parameterPath: "assetName",
    mapper: {
        serializedName: "assetName",
        required: true,
        type: {
            name: "String"
        }
    }
};
export const parameters7 = {
    parameterPath: "parameters",
    mapper: AssetMapper
};
export const parameters8 = {
    parameterPath: "parameters",
    mapper: ListContainerSasInputMapper
};
export const parameters9 = {
    parameterPath: "parameters",
    mapper: AssetFilterMapper
};
export const trackName = {
    parameterPath: "trackName",
    mapper: {
        serializedName: "trackName",
        required: true,
        type: {
            name: "String"
        }
    }
};
export const parameters10 = {
    parameterPath: "parameters",
    mapper: AssetTrackMapper
};
export const contentKeyPolicyName = {
    parameterPath: "contentKeyPolicyName",
    mapper: {
        serializedName: "contentKeyPolicyName",
        required: true,
        type: {
            name: "String"
        }
    }
};
export const parameters11 = {
    parameterPath: "parameters",
    mapper: ContentKeyPolicyMapper
};
export const transformName = {
    parameterPath: "transformName",
    mapper: {
        serializedName: "transformName",
        required: true,
        type: {
            name: "String"
        }
    }
};
export const parameters12 = {
    parameterPath: "parameters",
    mapper: TransformMapper
};
export const jobName = {
    parameterPath: "jobName",
    mapper: {
        serializedName: "jobName",
        required: true,
        type: {
            name: "String"
        }
    }
};
export const parameters13 = {
    parameterPath: "parameters",
    mapper: JobMapper
};
export const streamingPolicyName = {
    parameterPath: "streamingPolicyName",
    mapper: {
        serializedName: "streamingPolicyName",
        required: true,
        type: {
            name: "String"
        }
    }
};
export const parameters14 = {
    parameterPath: "parameters",
    mapper: StreamingPolicyMapper
};
export const streamingLocatorName = {
    parameterPath: "streamingLocatorName",
    mapper: {
        serializedName: "streamingLocatorName",
        required: true,
        type: {
            name: "String"
        }
    }
};
export const parameters15 = {
    parameterPath: "parameters",
    mapper: StreamingLocatorMapper
};
export const liveEventName = {
    parameterPath: "liveEventName",
    mapper: {
        constraints: {
            Pattern: new RegExp("^[a-zA-Z0-9]+(-*[a-zA-Z0-9])*$"),
            MaxLength: 32,
            MinLength: 1
        },
        serializedName: "liveEventName",
        required: true,
        type: {
            name: "String"
        }
    }
};
export const parameters16 = {
    parameterPath: "parameters",
    mapper: LiveEventMapper
};
export const autoStart = {
    parameterPath: ["options", "autoStart"],
    mapper: {
        serializedName: "autoStart",
        type: {
            name: "Boolean"
        }
    }
};
export const parameters17 = {
    parameterPath: "parameters",
    mapper: LiveEventActionInputMapper
};
export const operationId1 = {
    parameterPath: "operationId",
    mapper: {
        constraints: {
            MinLength: 1
        },
        serializedName: "operationId",
        required: true,
        type: {
            name: "String"
        }
    }
};
export const liveOutputName = {
    parameterPath: "liveOutputName",
    mapper: {
        constraints: {
            Pattern: new RegExp("^([a-zA-Z0-9])+(-*[a-zA-Z0-9])*$"),
            MaxLength: 256,
            MinLength: 1
        },
        serializedName: "liveOutputName",
        required: true,
        type: {
            name: "String"
        }
    }
};
export const parameters18 = {
    parameterPath: "parameters",
    mapper: LiveOutputMapper
};
export const streamingEndpointName = {
    parameterPath: "streamingEndpointName",
    mapper: {
        constraints: {
            Pattern: new RegExp("^[a-zA-Z0-9]+(-*[a-zA-Z0-9])*$"),
            MaxLength: 24,
            MinLength: 1
        },
        serializedName: "streamingEndpointName",
        required: true,
        type: {
            name: "String"
        }
    }
};
export const parameters19 = {
    parameterPath: "parameters",
    mapper: StreamingEndpointMapper
};
export const parameters20 = {
    parameterPath: "parameters",
    mapper: StreamingEntityScaleUnitMapper
};
//# sourceMappingURL=parameters.js.map