import { PrivateEndpointConnections } from "../operationsInterfaces";
import { AzureMediaServices } from "../azureMediaServices";
import { PrivateEndpointConnectionsListOptionalParams, PrivateEndpointConnectionsListResponse, PrivateEndpointConnectionsGetOptionalParams, PrivateEndpointConnectionsGetResponse, PrivateEndpointConnection, PrivateEndpointConnectionsCreateOrUpdateOptionalParams, PrivateEndpointConnectionsCreateOrUpdateResponse, PrivateEndpointConnectionsDeleteOptionalParams } from "../models";
/** Class containing PrivateEndpointConnections operations. */
export declare class PrivateEndpointConnectionsImpl implements PrivateEndpointConnections {
    private readonly client;
    /**
     * Initialize a new instance of the class PrivateEndpointConnections class.
     * @param client Reference to the service client
     */
    constructor(client: AzureMediaServices);
    /**
     * List all private endpoint connections.
     * @param resourceGroupName The name of the resource group within the Azure subscription.
     * @param accountName The Media Services account name.
     * @param options The options parameters.
     */
    list(resourceGroupName: string, accountName: string, options?: PrivateEndpointConnectionsListOptionalParams): Promise<PrivateEndpointConnectionsListResponse>;
    /**
     * Get the details of a private endpoint connection.
     * @param resourceGroupName The name of the resource group within the Azure subscription.
     * @param accountName The Media Services account name.
     * @param name
     * @param options The options parameters.
     */
    get(resourceGroupName: string, accountName: string, name: string, options?: PrivateEndpointConnectionsGetOptionalParams): Promise<PrivateEndpointConnectionsGetResponse>;
    /**
     * Update an existing private endpoint connection.
     * @param resourceGroupName The name of the resource group within the Azure subscription.
     * @param accountName The Media Services account name.
     * @param name
     * @param parameters The request parameters
     * @param options The options parameters.
     */
    createOrUpdate(resourceGroupName: string, accountName: string, name: string, parameters: PrivateEndpointConnection, options?: PrivateEndpointConnectionsCreateOrUpdateOptionalParams): Promise<PrivateEndpointConnectionsCreateOrUpdateResponse>;
    /**
     * Deletes a private endpoint connection.
     * @param resourceGroupName The name of the resource group within the Azure subscription.
     * @param accountName The Media Services account name.
     * @param name
     * @param options The options parameters.
     */
    delete(resourceGroupName: string, accountName: string, name: string, options?: PrivateEndpointConnectionsDeleteOptionalParams): Promise<void>;
}
//# sourceMappingURL=privateEndpointConnections.d.ts.map