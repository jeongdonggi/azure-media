import { PagedAsyncIterableIterator } from "@azure/core-paging";
import { Jobs } from "../operationsInterfaces";
import { AzureMediaServices } from "../azureMediaServices";
import { Job, JobsListOptionalParams, JobsGetOptionalParams, JobsGetResponse, JobsCreateOptionalParams, JobsCreateResponse, JobsDeleteOptionalParams, JobsUpdateOptionalParams, JobsUpdateResponse, JobsCancelJobOptionalParams } from "../models";
/** Class containing Jobs operations. */
export declare class JobsImpl implements Jobs {
    private readonly client;
    /**
     * Initialize a new instance of the class Jobs class.
     * @param client Reference to the service client
     */
    constructor(client: AzureMediaServices);
    /**
     * Lists all of the Jobs for the Transform.
     * @param resourceGroupName The name of the resource group within the Azure subscription.
     * @param accountName The Media Services account name.
     * @param transformName The Transform name.
     * @param options The options parameters.
     */
    list(resourceGroupName: string, accountName: string, transformName: string, options?: JobsListOptionalParams): PagedAsyncIterableIterator<Job>;
    private listPagingPage;
    private listPagingAll;
    /**
     * Lists all of the Jobs for the Transform.
     * @param resourceGroupName The name of the resource group within the Azure subscription.
     * @param accountName The Media Services account name.
     * @param transformName The Transform name.
     * @param options The options parameters.
     */
    private _list;
    /**
     * Gets a Job.
     * @param resourceGroupName The name of the resource group within the Azure subscription.
     * @param accountName The Media Services account name.
     * @param transformName The Transform name.
     * @param jobName The Job name.
     * @param options The options parameters.
     */
    get(resourceGroupName: string, accountName: string, transformName: string, jobName: string, options?: JobsGetOptionalParams): Promise<JobsGetResponse>;
    /**
     * Creates a Job.
     * @param resourceGroupName The name of the resource group within the Azure subscription.
     * @param accountName The Media Services account name.
     * @param transformName The Transform name.
     * @param jobName The Job name.
     * @param parameters The request parameters
     * @param options The options parameters.
     */
    create(resourceGroupName: string, accountName: string, transformName: string, jobName: string, parameters: Job, options?: JobsCreateOptionalParams): Promise<JobsCreateResponse>;
    /**
     * Deletes a Job.
     * @param resourceGroupName The name of the resource group within the Azure subscription.
     * @param accountName The Media Services account name.
     * @param transformName The Transform name.
     * @param jobName The Job name.
     * @param options The options parameters.
     */
    delete(resourceGroupName: string, accountName: string, transformName: string, jobName: string, options?: JobsDeleteOptionalParams): Promise<void>;
    /**
     * Update is only supported for description and priority. Updating Priority will take effect when the
     * Job state is Queued or Scheduled and depending on the timing the priority update may be ignored.
     * @param resourceGroupName The name of the resource group within the Azure subscription.
     * @param accountName The Media Services account name.
     * @param transformName The Transform name.
     * @param jobName The Job name.
     * @param parameters The request parameters
     * @param options The options parameters.
     */
    update(resourceGroupName: string, accountName: string, transformName: string, jobName: string, parameters: Job, options?: JobsUpdateOptionalParams): Promise<JobsUpdateResponse>;
    /**
     * Cancel a Job.
     * @param resourceGroupName The name of the resource group within the Azure subscription.
     * @param accountName The Media Services account name.
     * @param transformName The Transform name.
     * @param jobName The Job name.
     * @param options The options parameters.
     */
    cancelJob(resourceGroupName: string, accountName: string, transformName: string, jobName: string, options?: JobsCancelJobOptionalParams): Promise<void>;
    /**
     * ListNext
     * @param resourceGroupName The name of the resource group within the Azure subscription.
     * @param accountName The Media Services account name.
     * @param transformName The Transform name.
     * @param nextLink The nextLink from the previous successful call to the List method.
     * @param options The options parameters.
     */
    private _listNext;
}
//# sourceMappingURL=jobs.d.ts.map