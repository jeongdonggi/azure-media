import { PagedAsyncIterableIterator } from "@azure/core-paging";
import { StreamingEndpoints } from "../operationsInterfaces";
import { AzureMediaServices } from "../azureMediaServices";
import { PollerLike, PollOperationState } from "@azure/core-lro";
import { StreamingEndpoint, StreamingEndpointsListOptionalParams, StreamingEndpointsGetOptionalParams, StreamingEndpointsGetResponse, StreamingEndpointsCreateOptionalParams, StreamingEndpointsCreateResponse, StreamingEndpointsUpdateOptionalParams, StreamingEndpointsUpdateResponse, StreamingEndpointsDeleteOptionalParams, StreamingEndpointsSkusOptionalParams, StreamingEndpointsSkusResponse, StreamingEndpointsStartOptionalParams, StreamingEndpointsStopOptionalParams, StreamingEntityScaleUnit, StreamingEndpointsScaleOptionalParams, StreamingEndpointsAsyncOperationOptionalParams, StreamingEndpointsAsyncOperationResponse, StreamingEndpointsOperationLocationOptionalParams, StreamingEndpointsOperationLocationResponse } from "../models";
/** Class containing StreamingEndpoints operations. */
export declare class StreamingEndpointsImpl implements StreamingEndpoints {
    private readonly client;
    /**
     * Initialize a new instance of the class StreamingEndpoints class.
     * @param client Reference to the service client
     */
    constructor(client: AzureMediaServices);
    /**
     * Lists the streaming endpoints in the account.
     * @param resourceGroupName The name of the resource group within the Azure subscription.
     * @param accountName The Media Services account name.
     * @param options The options parameters.
     */
    list(resourceGroupName: string, accountName: string, options?: StreamingEndpointsListOptionalParams): PagedAsyncIterableIterator<StreamingEndpoint>;
    private listPagingPage;
    private listPagingAll;
    /**
     * Lists the streaming endpoints in the account.
     * @param resourceGroupName The name of the resource group within the Azure subscription.
     * @param accountName The Media Services account name.
     * @param options The options parameters.
     */
    private _list;
    /**
     * Gets a streaming endpoint.
     * @param resourceGroupName The name of the resource group within the Azure subscription.
     * @param accountName The Media Services account name.
     * @param streamingEndpointName The name of the streaming endpoint, maximum length is 24.
     * @param options The options parameters.
     */
    get(resourceGroupName: string, accountName: string, streamingEndpointName: string, options?: StreamingEndpointsGetOptionalParams): Promise<StreamingEndpointsGetResponse>;
    /**
     * Creates a streaming endpoint.
     * @param resourceGroupName The name of the resource group within the Azure subscription.
     * @param accountName The Media Services account name.
     * @param streamingEndpointName The name of the streaming endpoint, maximum length is 24.
     * @param parameters Streaming endpoint properties needed for creation.
     * @param options The options parameters.
     */
    beginCreate(resourceGroupName: string, accountName: string, streamingEndpointName: string, parameters: StreamingEndpoint, options?: StreamingEndpointsCreateOptionalParams): Promise<PollerLike<PollOperationState<StreamingEndpointsCreateResponse>, StreamingEndpointsCreateResponse>>;
    /**
     * Creates a streaming endpoint.
     * @param resourceGroupName The name of the resource group within the Azure subscription.
     * @param accountName The Media Services account name.
     * @param streamingEndpointName The name of the streaming endpoint, maximum length is 24.
     * @param parameters Streaming endpoint properties needed for creation.
     * @param options The options parameters.
     */
    beginCreateAndWait(resourceGroupName: string, accountName: string, streamingEndpointName: string, parameters: StreamingEndpoint, options?: StreamingEndpointsCreateOptionalParams): Promise<StreamingEndpointsCreateResponse>;
    /**
     * Updates a existing streaming endpoint.
     * @param resourceGroupName The name of the resource group within the Azure subscription.
     * @param accountName The Media Services account name.
     * @param streamingEndpointName The name of the streaming endpoint, maximum length is 24.
     * @param parameters Streaming endpoint properties needed for creation.
     * @param options The options parameters.
     */
    beginUpdate(resourceGroupName: string, accountName: string, streamingEndpointName: string, parameters: StreamingEndpoint, options?: StreamingEndpointsUpdateOptionalParams): Promise<PollerLike<PollOperationState<StreamingEndpointsUpdateResponse>, StreamingEndpointsUpdateResponse>>;
    /**
     * Updates a existing streaming endpoint.
     * @param resourceGroupName The name of the resource group within the Azure subscription.
     * @param accountName The Media Services account name.
     * @param streamingEndpointName The name of the streaming endpoint, maximum length is 24.
     * @param parameters Streaming endpoint properties needed for creation.
     * @param options The options parameters.
     */
    beginUpdateAndWait(resourceGroupName: string, accountName: string, streamingEndpointName: string, parameters: StreamingEndpoint, options?: StreamingEndpointsUpdateOptionalParams): Promise<StreamingEndpointsUpdateResponse>;
    /**
     * Deletes a streaming endpoint.
     * @param resourceGroupName The name of the resource group within the Azure subscription.
     * @param accountName The Media Services account name.
     * @param streamingEndpointName The name of the streaming endpoint, maximum length is 24.
     * @param options The options parameters.
     */
    beginDelete(resourceGroupName: string, accountName: string, streamingEndpointName: string, options?: StreamingEndpointsDeleteOptionalParams): Promise<PollerLike<PollOperationState<void>, void>>;
    /**
     * Deletes a streaming endpoint.
     * @param resourceGroupName The name of the resource group within the Azure subscription.
     * @param accountName The Media Services account name.
     * @param streamingEndpointName The name of the streaming endpoint, maximum length is 24.
     * @param options The options parameters.
     */
    beginDeleteAndWait(resourceGroupName: string, accountName: string, streamingEndpointName: string, options?: StreamingEndpointsDeleteOptionalParams): Promise<void>;
    /**
     * List streaming endpoint supported skus.
     * @param resourceGroupName The name of the resource group within the Azure subscription.
     * @param accountName The Media Services account name.
     * @param streamingEndpointName The name of the streaming endpoint, maximum length is 24.
     * @param options The options parameters.
     */
    skus(resourceGroupName: string, accountName: string, streamingEndpointName: string, options?: StreamingEndpointsSkusOptionalParams): Promise<StreamingEndpointsSkusResponse>;
    /**
     * Starts an existing streaming endpoint.
     * @param resourceGroupName The name of the resource group within the Azure subscription.
     * @param accountName The Media Services account name.
     * @param streamingEndpointName The name of the streaming endpoint, maximum length is 24.
     * @param options The options parameters.
     */
    beginStart(resourceGroupName: string, accountName: string, streamingEndpointName: string, options?: StreamingEndpointsStartOptionalParams): Promise<PollerLike<PollOperationState<void>, void>>;
    /**
     * Starts an existing streaming endpoint.
     * @param resourceGroupName The name of the resource group within the Azure subscription.
     * @param accountName The Media Services account name.
     * @param streamingEndpointName The name of the streaming endpoint, maximum length is 24.
     * @param options The options parameters.
     */
    beginStartAndWait(resourceGroupName: string, accountName: string, streamingEndpointName: string, options?: StreamingEndpointsStartOptionalParams): Promise<void>;
    /**
     * Stops an existing streaming endpoint.
     * @param resourceGroupName The name of the resource group within the Azure subscription.
     * @param accountName The Media Services account name.
     * @param streamingEndpointName The name of the streaming endpoint, maximum length is 24.
     * @param options The options parameters.
     */
    beginStop(resourceGroupName: string, accountName: string, streamingEndpointName: string, options?: StreamingEndpointsStopOptionalParams): Promise<PollerLike<PollOperationState<void>, void>>;
    /**
     * Stops an existing streaming endpoint.
     * @param resourceGroupName The name of the resource group within the Azure subscription.
     * @param accountName The Media Services account name.
     * @param streamingEndpointName The name of the streaming endpoint, maximum length is 24.
     * @param options The options parameters.
     */
    beginStopAndWait(resourceGroupName: string, accountName: string, streamingEndpointName: string, options?: StreamingEndpointsStopOptionalParams): Promise<void>;
    /**
     * Scales an existing streaming endpoint.
     * @param resourceGroupName The name of the resource group within the Azure subscription.
     * @param accountName The Media Services account name.
     * @param streamingEndpointName The name of the streaming endpoint, maximum length is 24.
     * @param parameters Streaming endpoint scale parameters
     * @param options The options parameters.
     */
    beginScale(resourceGroupName: string, accountName: string, streamingEndpointName: string, parameters: StreamingEntityScaleUnit, options?: StreamingEndpointsScaleOptionalParams): Promise<PollerLike<PollOperationState<void>, void>>;
    /**
     * Scales an existing streaming endpoint.
     * @param resourceGroupName The name of the resource group within the Azure subscription.
     * @param accountName The Media Services account name.
     * @param streamingEndpointName The name of the streaming endpoint, maximum length is 24.
     * @param parameters Streaming endpoint scale parameters
     * @param options The options parameters.
     */
    beginScaleAndWait(resourceGroupName: string, accountName: string, streamingEndpointName: string, parameters: StreamingEntityScaleUnit, options?: StreamingEndpointsScaleOptionalParams): Promise<void>;
    /**
     * Get a streaming endpoint operation status.
     * @param resourceGroupName The name of the resource group within the Azure subscription.
     * @param accountName The Media Services account name.
     * @param operationId The ID of an ongoing async operation.
     * @param options The options parameters.
     */
    asyncOperation(resourceGroupName: string, accountName: string, operationId: string, options?: StreamingEndpointsAsyncOperationOptionalParams): Promise<StreamingEndpointsAsyncOperationResponse>;
    /**
     * Get a streaming endpoint operation status.
     * @param resourceGroupName The name of the resource group within the Azure subscription.
     * @param accountName The Media Services account name.
     * @param streamingEndpointName The name of the streaming endpoint, maximum length is 24.
     * @param operationId The ID of an ongoing async operation.
     * @param options The options parameters.
     */
    operationLocation(resourceGroupName: string, accountName: string, streamingEndpointName: string, operationId: string, options?: StreamingEndpointsOperationLocationOptionalParams): Promise<StreamingEndpointsOperationLocationResponse>;
    /**
     * ListNext
     * @param resourceGroupName The name of the resource group within the Azure subscription.
     * @param accountName The Media Services account name.
     * @param nextLink The nextLink from the previous successful call to the List method.
     * @param options The options parameters.
     */
    private _listNext;
}
//# sourceMappingURL=streamingEndpoints.d.ts.map