import { PagedAsyncIterableIterator } from "@azure/core-paging";
import { Transforms } from "../operationsInterfaces";
import { AzureMediaServices } from "../azureMediaServices";
import { Transform, TransformsListOptionalParams, TransformsGetOptionalParams, TransformsGetResponse, TransformsCreateOrUpdateOptionalParams, TransformsCreateOrUpdateResponse, TransformsDeleteOptionalParams, TransformsUpdateOptionalParams, TransformsUpdateResponse } from "../models";
/** Class containing Transforms operations. */
export declare class TransformsImpl implements Transforms {
    private readonly client;
    /**
     * Initialize a new instance of the class Transforms class.
     * @param client Reference to the service client
     */
    constructor(client: AzureMediaServices);
    /**
     * Lists the Transforms in the account.
     * @param resourceGroupName The name of the resource group within the Azure subscription.
     * @param accountName The Media Services account name.
     * @param options The options parameters.
     */
    list(resourceGroupName: string, accountName: string, options?: TransformsListOptionalParams): PagedAsyncIterableIterator<Transform>;
    private listPagingPage;
    private listPagingAll;
    /**
     * Lists the Transforms in the account.
     * @param resourceGroupName The name of the resource group within the Azure subscription.
     * @param accountName The Media Services account name.
     * @param options The options parameters.
     */
    private _list;
    /**
     * Gets a Transform.
     * @param resourceGroupName The name of the resource group within the Azure subscription.
     * @param accountName The Media Services account name.
     * @param transformName The Transform name.
     * @param options The options parameters.
     */
    get(resourceGroupName: string, accountName: string, transformName: string, options?: TransformsGetOptionalParams): Promise<TransformsGetResponse>;
    /**
     * Creates or updates a new Transform.
     * @param resourceGroupName The name of the resource group within the Azure subscription.
     * @param accountName The Media Services account name.
     * @param transformName The Transform name.
     * @param parameters The request parameters
     * @param options The options parameters.
     */
    createOrUpdate(resourceGroupName: string, accountName: string, transformName: string, parameters: Transform, options?: TransformsCreateOrUpdateOptionalParams): Promise<TransformsCreateOrUpdateResponse>;
    /**
     * Deletes a Transform.
     * @param resourceGroupName The name of the resource group within the Azure subscription.
     * @param accountName The Media Services account name.
     * @param transformName The Transform name.
     * @param options The options parameters.
     */
    delete(resourceGroupName: string, accountName: string, transformName: string, options?: TransformsDeleteOptionalParams): Promise<void>;
    /**
     * Updates a Transform.
     * @param resourceGroupName The name of the resource group within the Azure subscription.
     * @param accountName The Media Services account name.
     * @param transformName The Transform name.
     * @param parameters The request parameters
     * @param options The options parameters.
     */
    update(resourceGroupName: string, accountName: string, transformName: string, parameters: Transform, options?: TransformsUpdateOptionalParams): Promise<TransformsUpdateResponse>;
    /**
     * ListNext
     * @param resourceGroupName The name of the resource group within the Azure subscription.
     * @param accountName The Media Services account name.
     * @param nextLink The nextLink from the previous successful call to the List method.
     * @param options The options parameters.
     */
    private _listNext;
}
//# sourceMappingURL=transforms.d.ts.map