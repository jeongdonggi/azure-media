import { PagedAsyncIterableIterator } from "@azure/core-paging";
import { StreamingLocators } from "../operationsInterfaces";
import { AzureMediaServices } from "../azureMediaServices";
import { StreamingLocator, StreamingLocatorsListOptionalParams, StreamingLocatorsGetOptionalParams, StreamingLocatorsGetResponse, StreamingLocatorsCreateOptionalParams, StreamingLocatorsCreateResponse, StreamingLocatorsDeleteOptionalParams, StreamingLocatorsListContentKeysOptionalParams, StreamingLocatorsListContentKeysResponse, StreamingLocatorsListPathsOptionalParams, StreamingLocatorsListPathsResponse } from "../models";
/** Class containing StreamingLocators operations. */
export declare class StreamingLocatorsImpl implements StreamingLocators {
    private readonly client;
    /**
     * Initialize a new instance of the class StreamingLocators class.
     * @param client Reference to the service client
     */
    constructor(client: AzureMediaServices);
    /**
     * Lists the Streaming Locators in the account
     * @param resourceGroupName The name of the resource group within the Azure subscription.
     * @param accountName The Media Services account name.
     * @param options The options parameters.
     */
    list(resourceGroupName: string, accountName: string, options?: StreamingLocatorsListOptionalParams): PagedAsyncIterableIterator<StreamingLocator>;
    private listPagingPage;
    private listPagingAll;
    /**
     * Lists the Streaming Locators in the account
     * @param resourceGroupName The name of the resource group within the Azure subscription.
     * @param accountName The Media Services account name.
     * @param options The options parameters.
     */
    private _list;
    /**
     * Get the details of a Streaming Locator in the Media Services account
     * @param resourceGroupName The name of the resource group within the Azure subscription.
     * @param accountName The Media Services account name.
     * @param streamingLocatorName The Streaming Locator name.
     * @param options The options parameters.
     */
    get(resourceGroupName: string, accountName: string, streamingLocatorName: string, options?: StreamingLocatorsGetOptionalParams): Promise<StreamingLocatorsGetResponse>;
    /**
     * Create a Streaming Locator in the Media Services account
     * @param resourceGroupName The name of the resource group within the Azure subscription.
     * @param accountName The Media Services account name.
     * @param streamingLocatorName The Streaming Locator name.
     * @param parameters The request parameters
     * @param options The options parameters.
     */
    create(resourceGroupName: string, accountName: string, streamingLocatorName: string, parameters: StreamingLocator, options?: StreamingLocatorsCreateOptionalParams): Promise<StreamingLocatorsCreateResponse>;
    /**
     * Deletes a Streaming Locator in the Media Services account
     * @param resourceGroupName The name of the resource group within the Azure subscription.
     * @param accountName The Media Services account name.
     * @param streamingLocatorName The Streaming Locator name.
     * @param options The options parameters.
     */
    delete(resourceGroupName: string, accountName: string, streamingLocatorName: string, options?: StreamingLocatorsDeleteOptionalParams): Promise<void>;
    /**
     * List Content Keys used by this Streaming Locator
     * @param resourceGroupName The name of the resource group within the Azure subscription.
     * @param accountName The Media Services account name.
     * @param streamingLocatorName The Streaming Locator name.
     * @param options The options parameters.
     */
    listContentKeys(resourceGroupName: string, accountName: string, streamingLocatorName: string, options?: StreamingLocatorsListContentKeysOptionalParams): Promise<StreamingLocatorsListContentKeysResponse>;
    /**
     * List Paths supported by this Streaming Locator
     * @param resourceGroupName The name of the resource group within the Azure subscription.
     * @param accountName The Media Services account name.
     * @param streamingLocatorName The Streaming Locator name.
     * @param options The options parameters.
     */
    listPaths(resourceGroupName: string, accountName: string, streamingLocatorName: string, options?: StreamingLocatorsListPathsOptionalParams): Promise<StreamingLocatorsListPathsResponse>;
    /**
     * ListNext
     * @param resourceGroupName The name of the resource group within the Azure subscription.
     * @param accountName The Media Services account name.
     * @param nextLink The nextLink from the previous successful call to the List method.
     * @param options The options parameters.
     */
    private _listNext;
}
//# sourceMappingURL=streamingLocators.d.ts.map